//
// Grid system
// --------------------------------------------------

* {
  @include box-sizing(border-box);
}
*:before,
*:after {
  @include box-sizing(border-box);
}



// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  @include container-fixed();

  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;

  @media (max-width: $screen-tablet-max) {
      padding-left: $padding-tablet;
      padding-right: $padding-tablet;
  }
  @media (min-width: $screen-mobile-min) {
    width: $container-sm;
  }
  @media (min-width: $screen-tablet-min) {
    width: $container-sm;
  }
  @media (min-width: $screen-laptop-min) {
    width: $container-md;
  }
  @media (min-width: $screen-desktop-min) {
    width: $container-lg;
  }
}



// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  @include container-fixed();
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  @include make-row();
//  @media (max-width: $screen-laptop) {
//    margin-left:  0;
//    margin-right: 0;
//  }
}



// Columns
//
// Common styles for small and large grid columns

@include make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@include make-grid(all);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: $screen-mobile-min) {
  @include make-grid(tab);
}

@media (min-width: $screen-tablet-min) {
  @include make-grid(lap);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: $screen-laptop-min) {
  @include make-grid(desk);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@include lg-grid($lg-grid);

